/*!
 * A simple jQuery modal 
 * Author: Cynoinfotech
 * Version 1.0.0
 */
(function(b, c, e, f) {
    function d(a, c) {
        this.element = a;
        this.overlay = "";
        this.isOpen = !1;
        this._name = "cynoModal";
        this._defaults = b.fn.cynoModal.defaults;
        this.options = b.extend({}, this._defaults, c);
        this.init()
    }
    b.extend(d.prototype, {
        init: function() {
            this.$modal = b(this.element);
            this.$modal.hide();
            this.bindModal();
            this.moveModal();
            this.closeModalONESC()
        },
        bindModal: function() {
            var a = this;
            a.$modal.append('<button class="cyno-closeBtn">X</button>');
            a.bindOverlay();
            a.$modal.appendTo("body");
            a.options.autoTrigger && setTimeout(function() {
                    a.openModal()
                },
                1E3 * a.options.triggerAfter);
            if (b(a.options.triggerOn).length) b(a.options.triggerOn).on("click." + a._name, function(b) {
                b.preventDefault();
                a.openModal()
            })
        },
        bindOverlay: function() {
            0 == b(".cyno-overlay").length ? this.overlay = b('<div class = "cyno-overlay"></div>').appendTo(e.body).hide() : this.overlay = b(".cyno-overlay")
        },
        openModal: function() {
            var a = this;
            a.isOpen = !0;
            a.overlay.add(a.$modal).show().css({
                opacity: 0
            });
            a.overlay.animate({
                opacity: .8
            }, 200);
            a.$modal.css({
                top: Math.max(0, (b(c).height() - a.$modal.outerHeight()) /
                    2 + b(c).scrollTop()) + "px",
                left: Math.max(0, (b(c).width() - a.$modal.outerWidth()) / 2 + b(c).scrollLeft()) + "px"
            }).stop(!0).animate({
                opacity: 1
            }, 200);
            a.$modal.find("button.cyno-closeBtn").on("click." + a._name, function(b) {
                a.closeModal()
            })
        },
        closeModal: function() {
            var a = this;
            a.isOpen = !1;
            a.overlay.hide().add(a.$modal).animate({
                opacity: 0
            }, 200, function() {
                a.$modal.hide()
            })
        },
        closeModalONESC: function() {
            var a = this;
            b(c).on("keyup." + a._name, function(b) {
                27 === b.which && a.closeModal()
            })
        },
        moveModal: function() {
            var a = this;
            b(c).on("resize scroll." +
                a._name,
                function(d) {
                    a.isOpen && a.$modal.stop(!0).css({
                        opacity: 1
                    }).animate({
                        top: Math.max(0, (b(c).height() - a.$modal.outerHeight()) / 2 + b(c).scrollTop()) + "px",
                        left: Math.max(0, (b(c).width() - a.$modal.outerWidth()) / 2 + b(c).scrollLeft()) + "px"
                    }, 1E3)
                })
        }
    });
    b.fn.cynoModal = function(a) {
        this.each(function() {
            b.data(this, "plugin_cynoModal") || b.data(this, "plugin_cynoModal", new d(this, a))
        });
        return this
    };
    b.fn.cynoModal.defaults = {
        triggerOn: "",
        autoTrigger: !1,
        triggerAfter: 5
    }
})(jQuery, window, document);